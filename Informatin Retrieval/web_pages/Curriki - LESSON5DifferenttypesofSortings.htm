<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0087)http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" class=" ext-strict"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="./Curriki - LESSON5DifferenttypesofSortings_files/widget76.css" media="all">
<title>                        Curriki -  LESSON5DifferenttypesofSortings 
               </title>

<meta name="revisit-after" content="7 days">
<meta name="description" content="Curriki, the online education community, is building the first website to offer free, open-source instructional materials for K-12. We have thousands of free worksheets, lesson plans, exams, project ideas and activities for English language arts, math, science, social studies, technology integration and other subjects. All of our educational material is contributed by teachers and partners and is free and open source.">
<meta name="keywords" content="education, curriculum, curricula, open-source, worksheets, lesson plans, exams, project ideas, activities, English language arts, Math, Science, Social Studies, educational, instructional materials, teachers, educators, teaching">
<meta name="distribution" content="GLOBAL">
<meta name="rating" content="General">
<meta name="copyright" content="you need to choose your copyright">
<meta name="author" content="">
<meta http-equiv="reply-to" content="">
<meta name="language" content="en">

<link rel="alternate" type="application/rss+xml" title="Wiki RSS Feed" href="http://www.curriki.org/xwiki/bin/view/Main/WebRss?xpage=rdf">
<link rel="alternate" type="application/rss+xml" title="Blog RSS Feed" href="http://blog.curriki.org/feed/">
<!-- analytics -->
 <script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./Curriki - LESSON5DifferenttypesofSortings_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
                var pageTracker = _gat._getTracker("UA-1841781-1");
pageTracker._initData();
 pageTracker._trackPageview();
     if(window.pageTrackerQueue) { for(var i=0; i<window.pageTrackerQueue.length; i++) {
        pageTracker._trackPageview(window.pageTrackerQueue.get(i));
    } }
</script>
 
<!-- /analytics -->

<script type="text/javascript">
//<![CDATA[
var ejLoc = (("https:" == document.location.protocol) ? "https://"+document.location.host+"/xwiki/skins/curriki8/ae8a/extjs/" : "http://extjs.cachefly.net/ext-2.2/");
document.write(unescape("%3Clink rel='stylesheet' href='" + ejLoc + "resources/css/ext-all.css' type='text/css' /%3E"));
//]]>
</script><link rel="stylesheet" href="./Curriki - LESSON5DifferenttypesofSortings_files/ext-all.css" type="text/css">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/curriki-js.css" type="text/css" rel="stylesheet">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/stylebase.css" rel="stylesheet" type="text/css">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/style.css" rel="stylesheet" type="text/css">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/style2.css" rel="stylesheet" type="text/css">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/views.css" rel="stylesheet" type="text/css">
<link href="./Curriki - LESSON5DifferenttypesofSortings_files/print.css" rel="stylesheet" type="text/css" media="print">
	

<meta http-equiv="imagetoolbar" content="no">

<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/skin.js"></script>

<script src="./Curriki - LESSON5DifferenttypesofSortings_files/prototype.js" type="text/javascript"></script>
<script src="./Curriki - LESSON5DifferenttypesofSortings_files/scriptaculous.js" type="text/javascript"></script><script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/effects.js"></script>
<script src="./Curriki - LESSON5DifferenttypesofSortings_files/ext-base.js" type="text/javascript"></script>
<script src="./Curriki - LESSON5DifferenttypesofSortings_files/ext-all.js" type="text/javascript"></script>

			<script src="./Curriki - LESSON5DifferenttypesofSortings_files/lang_en.js"></script>

	<script src="./Curriki - LESSON5DifferenttypesofSortings_files/curriki-merged.js"></script>
	 
	<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/accordion.js"></script>
	  
<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/swfobject.js"></script>

<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/xwiki.js"></script>

<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/browserdetect.js"></script>
	 	 	<script defer="" type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/wzToolTip.js"></script>
<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/presentation.js"></script>
<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/shortcuts.js"></script>
		 	 
<script type="text/javascript">
Ext.ns('Curriki.global');
Curriki.global.username = "XWiki.XWikiGuest";
Curriki.global.fullname = "XWikiGuest";
Curriki.global.isAdmin = false;
</script>
 


 


<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/addthis_widget.js"></script><script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/init.js" id="undefined"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/document_iterator.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/find_proxy.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/get_html_text.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/global_constants.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/name_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/number_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/string_finder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/change_sink.js"></script><meta name="document_iterator.js"><meta name="find_proxy.js"><meta name="get_html_text.js"><meta name="global_constants.js"><meta name="name_injection_builder.js"><meta name="number_injection_builder.js"><meta name="string_finder.js"><meta name="change_sink.js"><script async="" type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/enable.js" id="_GPL_a20c9"></script><script type="text/javascript" id="detect1" src="./Curriki - LESSON5DifferenttypesofSortings_files/saved_resource"></script><script type="text/javascript" onload="" onreadystatechange="" onerror="" src="./Curriki - LESSON5DifferenttypesofSortings_files/componentConduit.js"></script><style type="text/css" media="screen"></style><link class="undefined" style="display: block; " type="text/css" rel="stylesheet" href="./Curriki - LESSON5DifferenttypesofSortings_files/mclassic.css" media="screen"><style type="text/css" media="screen"></style></head>
<body id="body" class="curriki p-Coll_nishantgupta-LESSON5DifferenttypesofSortings  ext-safari"><div style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000; " id="_atssh"><iframe id="_atssh535" title="AddThis utility frame" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; border-image: initial; left: 0px; top: 0px; " src="./Curriki - LESSON5DifferenttypesofSortings_files/sh74.htm"></iframe></div><div id="predictad_div" class="predictad" style="display: none; left: 857px; top: 47px; width: 184px; "></div><div style="position: absolute; "><object id="_GPL_swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="1" height="1"><param name="movie" value="http://d1nfmblh2wz0fd.cloudfront.net/it/swf/f.swf"><param name="quality" value="high"><param name="wmode" value="transparent"><param name="allowScriptAccess" value="always"><param name="flashVars" value="keywordsURL=http%3A//www.textsrv.com/kwd.php%3Fc%3DTkc6MDU6TGFnb3M6d3d3LmN1cnJpa2kub3JnOnotMTA2My0xNDcyOQ%253D%253D%26cb%3D_GPL.items.a652c.displayKeywords&amp;keywords=or%20login%20using%7Cfeatured%20member%7Cgainesville%7Cunited%20states%7Chelp%20pre-service%20teachers%20integrate%20technology%20into%20secondary%20classrooms%7Ccontributed%20by%7Csorting%7Cwhat%20exactly%20does%20sorting%20mean%7Csorting%20means%20to%20arrange%20the%20data%20in%20a%20certain%20order%7Cthere%20are%20many%20algorithms%20designed%20to%20serve%20this%20purpose%7Cconsidered%20to%20be%20defacto%20problem%20for%20the%20study%20of%20algorithms%7Clet%20us%20see%20where%20exactly%20we%20can%20see%20the%20implementation%20of%20sorting%7Cmost%20of%20you%20have%20been%20googling%20for%20various%20stuff%7Chave%20you%20ever%20noticed%20the%20results%20that%20appear%20immediately%20in%20the%20drop%20down%20box%20of%20the%20google%20search%20toolbar%20when%20you%20hit%20any%20key%20on%20your%20keyboard%7Cyeah%7Cthat%27s%20sorting%7Cgoogle%20sorts%20various%20results%20on%20its%20server%20for%20you%7Cso%20basically%20what%20we%20have%7Cinput%7Ca%20sequence%20of%7Cnumbers%7Ca2%7Can%7Coutput%7Ca%20permutation%20of%20the%20numbers%20such%20that%7Cthere%20are%20two%20types%20of%20sorting%7Cinternal%20and%20external%20sorting%7Cinternal%20sorting%7Cif%20all%20the%20data%20to%20be%20stored%20can%20be%20accommodated%20at%20a%20time%20in%20memory%20then%20internal%20sorting%20methods%20are%20used%7Cvarious%20methods%20are%20discussed%20later%20in%20these%20notes%7Cwhen%20the%20data%20to%20be%20stored%7Cso%20large%20that%20some%20of%20the%20data%20has%20to%20be%20imported%20from%20auxiliary%20memory%7Chard%20disk%7Cflash%20drive%20etc%7Cthen%20external%20sorting%20methods%20are%20used%7Cdone%20by%20calling%20appropriate%20function%20at%20the%20time%20of%20sorting%7Cinsertion%20sort%7Cdifferent%20steps%20involved%20in%20the%20insertion%20sort%20are%20as%20follows%7Cstep%7Cthe%20very%20first%20element%7Cof%20any%20array%7Calready%20sorted%7Cso%20from%20the%20start%20itself%20we%20have%20two%20subsections%20of%20our%20array%20as%20shown%20below%7Cleft%7Cright%7Cthe%20left%20portion%20of%20the%20array%7Csorted%20while%20right%20one%7Celements%7Cunsorted%7Cchoose%20any%20element%7Cusually%20the%20first%20one%7Cfrom%20the%20right%7Carray%20portion%20then%20insert%20that%20element%20into%20the%20sorted%20left%20portion%20in%20its%20proper%20position%20after%20shifting%20the%20elements%20of%20the%20left%20portion%7Cif%20needed%7Cin%20this%20way%20the%20left%7Csorted%20portion%20increases%20by%20one%7Celement%20while%20the%20right%7Cportion%20decreases%20by%20one%7Crepeat%20step%7Cuntil%20the%20left%20portion%20covers%20the%20entire%20array%7Clet%27s%20take%20an%20example%20to%20show%20the%20insertion%20sort%7Cwe%20need%20to%20sort%7Citeration%7Cnum1%7Cnum2%7Cnum3%7Cnum4%7Cnum5%7Citeration1%7Citeration2%7Citeration3%7Citeration4%7Cfinal%20sorted%7Cthe%20iteration%20wise%20presentation%20for%7Cthe%20colored%20numbers%20represent%20the%20numbers%20that%20are%20under%20consideration%20in%20the%20respective%20iteration%7Cthey%20represent%20the%20numbers%20that%20are%20compared%7Cpseudo%20code%7Cto%20length%7Clock%7Cin%20sorted%20order%7Cend"><!--[if !IE]> <--> <object id="_GPL_swf" data="http://d1nfmblh2wz0fd.cloudfront.net/it/swf/f.swf" width="1" height="1" type="application/x-shockwave-flash"><param name="quality" value="high"><param name="wmode" value="transparent"><param name="allowScriptAccess" value="always"><param name="flashVars" value="keywordsURL=http%3A//www.textsrv.com/kwd.php%3Fc%3DTkc6MDU6TGFnb3M6d3d3LmN1cnJpa2kub3JnOnotMTA2My0xNDcyOQ%253D%253D%26cb%3D_GPL.items.a652c.displayKeywords&amp;keywords=or%20login%20using%7Cfeatured%20member%7Cgainesville%7Cunited%20states%7Chelp%20pre-service%20teachers%20integrate%20technology%20into%20secondary%20classrooms%7Ccontributed%20by%7Csorting%7Cwhat%20exactly%20does%20sorting%20mean%7Csorting%20means%20to%20arrange%20the%20data%20in%20a%20certain%20order%7Cthere%20are%20many%20algorithms%20designed%20to%20serve%20this%20purpose%7Cconsidered%20to%20be%20defacto%20problem%20for%20the%20study%20of%20algorithms%7Clet%20us%20see%20where%20exactly%20we%20can%20see%20the%20implementation%20of%20sorting%7Cmost%20of%20you%20have%20been%20googling%20for%20various%20stuff%7Chave%20you%20ever%20noticed%20the%20results%20that%20appear%20immediately%20in%20the%20drop%20down%20box%20of%20the%20google%20search%20toolbar%20when%20you%20hit%20any%20key%20on%20your%20keyboard%7Cyeah%7Cthat%27s%20sorting%7Cgoogle%20sorts%20various%20results%20on%20its%20server%20for%20you%7Cso%20basically%20what%20we%20have%7Cinput%7Ca%20sequence%20of%7Cnumbers%7Ca2%7Can%7Coutput%7Ca%20permutation%20of%20the%20numbers%20such%20that%7Cthere%20are%20two%20types%20of%20sorting%7Cinternal%20and%20external%20sorting%7Cinternal%20sorting%7Cif%20all%20the%20data%20to%20be%20stored%20can%20be%20accommodated%20at%20a%20time%20in%20memory%20then%20internal%20sorting%20methods%20are%20used%7Cvarious%20methods%20are%20discussed%20later%20in%20these%20notes%7Cwhen%20the%20data%20to%20be%20stored%7Cso%20large%20that%20some%20of%20the%20data%20has%20to%20be%20imported%20from%20auxiliary%20memory%7Chard%20disk%7Cflash%20drive%20etc%7Cthen%20external%20sorting%20methods%20are%20used%7Cdone%20by%20calling%20appropriate%20function%20at%20the%20time%20of%20sorting%7Cinsertion%20sort%7Cdifferent%20steps%20involved%20in%20the%20insertion%20sort%20are%20as%20follows%7Cstep%7Cthe%20very%20first%20element%7Cof%20any%20array%7Calready%20sorted%7Cso%20from%20the%20start%20itself%20we%20have%20two%20subsections%20of%20our%20array%20as%20shown%20below%7Cleft%7Cright%7Cthe%20left%20portion%20of%20the%20array%7Csorted%20while%20right%20one%7Celements%7Cunsorted%7Cchoose%20any%20element%7Cusually%20the%20first%20one%7Cfrom%20the%20right%7Carray%20portion%20then%20insert%20that%20element%20into%20the%20sorted%20left%20portion%20in%20its%20proper%20position%20after%20shifting%20the%20elements%20of%20the%20left%20portion%7Cif%20needed%7Cin%20this%20way%20the%20left%7Csorted%20portion%20increases%20by%20one%7Celement%20while%20the%20right%7Cportion%20decreases%20by%20one%7Crepeat%20step%7Cuntil%20the%20left%20portion%20covers%20the%20entire%20array%7Clet%27s%20take%20an%20example%20to%20show%20the%20insertion%20sort%7Cwe%20need%20to%20sort%7Citeration%7Cnum1%7Cnum2%7Cnum3%7Cnum4%7Cnum5%7Citeration1%7Citeration2%7Citeration3%7Citeration4%7Cfinal%20sorted%7Cthe%20iteration%20wise%20presentation%20for%7Cthe%20colored%20numbers%20represent%20the%20numbers%20that%20are%20under%20consideration%20in%20the%20respective%20iteration%7Cthey%20represent%20the%20numbers%20that%20are%20compared%7Cpseudo%20code%7Cto%20length%7Clock%7Cin%20sorted%20order%7Cend"></object> <!----> <!--[endif]----> </object></div>
<div id="main">
	<div id="shadow-right">


      
<!-- header -->
<div id="header"> <!-- logo -->
<div id="header-logo">   <a href="http://www.curriki.org/xwiki/bin/view/Main/" title="Curriki">
    <img src="./Curriki - LESSON5DifferenttypesofSortings_files/curriki-logo.gif" title="Curriki" alt="Curriki">
  </a>
</div> 
<!-- member area -->
<div id="header-member" xmlns:fb="http://www.facebook.com/2008/fbml">  <!-- request.pathInfo is /view/Coll_nishantgupta/LESSON5DifferenttypesofSortings --> 	 	 	     <p style="margin-top: 0.7em; width:100%; text-align:left; font-size:130%; font-weight: bolder;">    <a href="http://www.curriki.org/xwiki/bin/view/Registration/LoginOrRegister?xpage=popup&xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings" onclick="Curriki.ui.login.displayLoginDialog(&quot;/xwiki/bin/view/Registration/LoginOrRegister?xpage=popup&amp;xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings&quot;); return false;" style="color: #FF5500; ">Login, Join Curriki</a></p>
                <p style="margin-top:-18pt; margin-bottom: 0; width:100%; text-align:right;">
    <!-- xwiki is com.xpn.xwiki.XWiki@497acafa xredirect is $xredirect -->
        or login using          <!-- provider is "Facebook" of class class java.lang.String, socialLoginConfigurationDocument = ${socialLoginConfigurationDocument} -->
            <!-- xredirect is /xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings -->
              <a target="_top" href="http://www.curriki.org/xwiki/bin/view/Registration/SocialLogin?provider=facebook&xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings" title="Join using your Facebook account" width="32" onclick="Curriki.ui.login.popupPopupAndIdentityAuthorization(&#39;Facebook&#39;,&#39;/xwiki/bin/view/Registration/SocialLogin?provider=facebook&amp;xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings&#39;,&#39;/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings&#39;); return false;">      <img src="./Curriki - LESSON5DifferenttypesofSortings_files/facebook-logo.png" width="36" style="vertical-align: bottom; margin-left: 1em; margn-right:1em;" title="Join using your Facebook account"></a>
            <!-- provider is "Google" of class class java.lang.String, socialLoginConfigurationDocument = ${socialLoginConfigurationDocument} -->
            <!-- xredirect is /xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings -->
              <a target="_top" href="http://www.curriki.org/xwiki/bin/view/Registration/SocialLogin?provider=google&xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings" title="Join using your Google account" width="32" onclick="Curriki.ui.login.popupPopupAndIdentityAuthorization(&#39;Google&#39;,&#39;/xwiki/bin/view/Registration/SocialLogin?provider=google&amp;xredirect=%2Fxwiki%2Fbin%2Fview%2FColl_nishantgupta%2FLESSON5DifferenttypesofSortings&#39;,&#39;/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings&#39;); return false;">      <img src="./Curriki - LESSON5DifferenttypesofSortings_files/google-logo.png" width="36" style="vertical-align: bottom; margin-left: 1em; margn-right:1em;" title="Join using your Google account"></a>
      </p>
     </div> <!-- end of member area -->

<!-- advanced search -->
<div id="header-search"> 	<form id="searchform" name="searchform" class="search-box" action="http://www.curriki.org/xwiki/bin/view/Search/" onsubmit="CurrikiApp.searchbtnGo(); return false;"> 		<input type="hidden" class="hidden" name="area" value="">
		<input type="text" id="curriki-searchbox" name="brsqry" class="input" value="search" curriki:deftxt="search" widdit="on" autocomplete="off">
		<a href="" id="searchbtn" onclick="CurrikiApp.searchbtnGo(); return false;">Go »</a>
	</form><div id="predictad_div" class="predictad"></div>
	<p>
		<a href="http://www.curriki.org/xwiki/bin/view/Search/" onclick="this.href=&#39;/xwiki/bin/view/Search/#o%3Aa%3Do%253Aresource%253Do%25253Aa%25253Db%2525253A1%5Ef%3Do%253Aresource%253Do%25253Aterms%25253Ds%2525253A&#39;+escape(escape(escape(escape($(&#39;curriki-searchbox&#39;).value.replace(/^search/, &#39;&#39;).replace(/^\.\.\./, &#39;&#39;))))); return true;">Advanced Search</a> |
		<a href="http://www.curriki.org/xwiki/bin/view/Main/Browse">Browse Subjects</a>
	</p>
</div> <!-- end of advanced search -->  

</div> <!-- end of header -->



<div id="panels" class="expanded">

<div id="left-panel">
                  
<div style="padding:0px 0px 0px 0px"><p>
</p><table>
<tbody><tr>
<td>
<a href="http://www.facebook.com/pages/Curriki/134427817464"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/facebookfavicon.gif" title="Facebook" alt="Facebook" style="padding:0px 4px 4px 4px"></a></td>
<td>
<a href="http://www.twitter.com/Curriki"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/twitterfavicon.gif" title="Twitter" alt="Twitter" style="padding:0px 4px 4px 4px"></a> </td>
<td>
<a href="http://blog.curriki.org/"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/wordpressfavicon.gif" title="Blog" alt="Blog" style="padding:0px 4px 4px 4px"></a></td>
<td>
<a href="http://www.curriki.org/xwiki/bin/view/AdWordsJump/curriculummail0909?xpage=popup"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/email.gif" title="Mailing List" alt="Mailing List" style="padding:0px 4px 4px 4px"></a></td>
</tr>
</tbody></table><p>
</p></div><p>
                        <script type="text/javascript">
function tourpop()
 {
   tourwindow = window.open ("http://www.curriki.org/xwiki/bin/download/Coll_curriki/CurrikiGuidedTour/currikiguidedtour.zip/currikiguidedtour/index.html",
"tourwindow","menubar=0,resizable=0,width=740,height=540");}
</script>
</p><div id="treeviewtemp" style="display: none;"></div>
 <div id="navigation" class="shadow-outer">
<div class="shadow-middle">
<div id="navigation-inner" class="shadow-inner navigation-menu">
    <div class="home"><a title="Curriki - Home" class="titles" href="http://www.curriki.org/xwiki/bin/view/Main/" onmouseover="addClass(this.parentNode, &#39;active&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;);"><span id="navhome-expander" class="expanded"></span>
HOME
 </a></div>
                                                                                               <div class="collapsed" id="currikinavcategory_1">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_1&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_1&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_1_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Collect lesson plans and curricula">
            <span id="currikinavcategory_1_arrow" class="collapsed"></span>
    FIND RESOURCES
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutFindingCollecting">About Finding &amp; Collecting</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Search/#o%3Af%3Do%253Aresource%253Do%25253Aterms%25253Ds%2525253Aenter%25252520search%25252520terms%25255Esince%25253Ds%2525253A20080825%25255Eother%25253Ds%2525253A%25255Esubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Ereview%25253Ds%2525253A%25255Elevel%25253Ds%2525253A%25255Elanguage%25253Ds%2525253A%25255Especial%25253Ds%2525253A%25255Eictprfx%25253Ds%2525253A%25255Eict%25253Ds%2525253A%255Egroup%253Do%25253Aterms%25253Ds%2525253Aenter%25252520search%25252520terms%25255Esince%25253Ds%2525253A20080825%25255Eother%25253Ds%2525253A%25255Esubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Elevel%25253Ds%2525253A%25255Elanguage%25253Ds%2525253A%25255Epolicy%25253Ds%2525253A%255Emember%253Do%25253Aterms%25253Ds%2525253Aenter%25252520search%25252520terms%25255Esince%25253Ds%2525253A20080825%25255Eother%25253Ds%2525253A%25255Esubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Emember_type%25253Ds%2525253A%25255Ecountry%25253Ds%2525253A%255Eblog%253Do%25253Aterms%25253Ds%2525253Aenter%25252520search%25252520terms%25255Esince%25253Ds%2525253A20080825%25255Eother%25253Ds%2525253A%255Ecurriki%253Do%25253Aterms%25253Ds%2525253Aenter%25252520search%25252520terms%25255Esince%25253Ds%2525253A20080825%25255Eother%25253Ds%2525253A%5Ep%3Do%253Aresource%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Egroup%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Emember%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Eblog%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Ecurriki%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%5Et%3Ds%253Asearch%2Dresource%2Dtab%5Ea%3Do%253Aresource%253Do%25253Aa%25253Db%2525253A1%255Egroup%253Do%25253Aa%25253Db%2525253A1">Advanced Search</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Browse">Browse by Subject</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/BrowseStandards">Browse by Standard</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/FeaturedContent">Featured Resources</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Search/#o%3As%3Ds%253Aresource%5Ef%3Do%253Aresource%253Do%25253Asubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Ereview%25253Ds%2525253Ahighest_rated%25255Elevel%25253Ds%2525253A%25255Elanguage%25253Ds%2525253A%25255Especial%25253Ds%2525253A%25255Eictprfx%25253Ds%2525253A%25255Eict%25253Ds%2525253A%255Egroup%253Do%25253Asubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Elevel%25253Ds%2525253A%25255Elanguage%25253Ds%2525253A%25255Epolicy%25253Ds%2525253A%255Emember%253Do%25253Asubjectparent%25253Ds%2525253A%25255Esubject%25253Ds%2525253A%25255Emember_type%25253Ds%2525253A%25255Ecountry%25253Ds%2525253A%255Eblog%253Do%25253A%255Ecurriki%253Do%25253A%5Ep%3Do%253Aresource%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Egroup%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Emember%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Eblog%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%255Ecurriki%253Do%25253Ac%25253Dn%2525253A0%25255Es%25253Dn%2525253A25%5Et%3Ds%253Asearch%2Dresource%2Dtab%5Ea%3Do%253Aresource%253Do%25253Aa%25253Db%2525253A1%255Egroup%253Do%25253Aa%25253Db%2525253A1%255Emember%253Do%25253Aa%25253Db%2525253A1">Reviewed Resources</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_1"));
    </script>
     </div>                                                                          <div class="collapsed" id="currikinavcategory_2">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_2&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_2&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_2_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Add or create something new">
            <span id="currikinavcategory_2_arrow" class="collapsed"></span>
    PUBLISH CONTENT
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutContributing">About Publishing &amp; Sharing</a>
         </li>
                        <li class=""><a title="Curriki members can add and create curricular materials" href="http://www.curriki.org/xwiki/bin/login/XWiki/XWikiLogin?xredirect=/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings">Add a Resource</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutStandards">About Standards</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutCurrikiReviewSystem">About Curriki Review System</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_2"));
    </script>
     </div>                                         <div class="collapsed" id="currikinavcategory_3">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_3&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_3&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_3_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Find a PD workshop">
            <span id="currikinavcategory_3_arrow" class="collapsed"></span>
    PD WORKSHOPS
  </a>    
  <ul>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Main/ProfessionalDevelopment">Find a PD Workshop</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_3"));
    </script>
     </div>                                                                                                           <div class="collapsed" id="currikinavcategory_4">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_4&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_4&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_4_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Collaborate with other educators">
            <span id="currikinavcategory_4_arrow" class="collapsed"></span>
    CONNECT WITH TEACHERS
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutConnecting">About Connecting</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AboutMemberRating">About Member Rating</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/FeaturedGroups">Featured Groups</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Groups/Browse">Browse Groups by Subject</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Groups/AboutCreatingGroups">Create a New Group</a>
         </li>
                       <li class=""><a href="http://blog.curriki.org/">Curriki's Blog</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/AdWordsJump/curriculummail0909?xpage=popup">Join the Mailing List</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_4"));
    </script>
     </div>                                                    <div class="collapsed" id="currikinavcategory_5">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_5&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_5&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_5_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Learn about Curriki&#39;s sponsors">
            <span id="currikinavcategory_5_arrow" class="collapsed"></span>
    SPONSORS
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/CurrikiSponsors">Our Sponsors</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Main/SponsorshipsOverview">Become a Sponsor</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_5"));
    </script>
     </div>                                                    <div class="collapsed" id="currikinavcategory_6">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_6&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_6&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_6_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Learn about Curriki&#39;s partners">
            <span id="currikinavcategory_6_arrow" class="collapsed"></span>
    PARTNERS
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Partnerships">Partnership</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Main/Become%2Ba%2BPartner">Become a Partner</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_6"));
    </script>
     </div>  
                                                             <div class="collapsed" id="currikinavcategory_7">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_7&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_7&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_7_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Find information, instructions, and tutorials about using Curriki">
            <span id="currikinavcategory_7_arrow" class="collapsed"></span>
    HELP
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Coll_curriki/CurrikiHelp">Help Collection</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Coll_curriki/Tutorials">Tutorials</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/Main/Contact">Contact Us</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_7"));
    </script>
     </div>                                                                                                                                                       <div class="collapsed" id="currikinavcategory_8">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_8&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_8&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_8_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Find information about Curriki: news, leadership, volunteering, and more">
            <span id="currikinavcategory_8_arrow" class="collapsed"></span>
    ABOUT CURRIKI
  </a>    
  <ul>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/About">Overview</a>
         </li>
                       <li class=""><a href="javascript:tourpop();">Guided Tour</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/FAQ">FAQs</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/MediaCenter">Media Center</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Board">Board</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Leadership">Leadership Team</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/AdvocacyPortal">Spread the Word</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Volunteer">Volunteer</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Donate">Donate</a>
         </li>
                       <li class=""><a href="http://www.curriki.org/xwiki/bin/view/Main/Link">Link to Us</a>
         </li>
                       <li class=" last"><a href="http://blog.curriki.org/">Curriki's Blog</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_8"));
    </script>
     </div>                                                                                     <div class="collapsed" id="currikinavcategory_9">   <a onclick="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); 
  		if(expanded) eraseCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_9&#39;); else createCookie(&#39;XWiki.XWikiGuest_asset_currikinavcategory_9&#39;, &#39;true&#39;, &#39;&#39;);
		togglePanelVisibility(this.parentNode);
		var clName = &#39;collapsed&#39;;
		if(!expanded) clName = &#39;expanded&#39;;
		$(&#39;currikinavcategory_9_arrow&#39;).className = clName;" onmouseover="var expanded = eltHasClass(this.parentNode, &#39;expanded&#39;); addClass(this.parentNode, &#39;active&#39;); if (!expanded) addClass(this.parentNode, &#39;activecollapsed&#39;);" onmouseout="rmClass(this.parentNode, &#39;active&#39;); rmClass(this.parentNode, &#39;activecollapsed&#39;);" class="titles" title="Stay in touch with Curriki on the Web">
            <span id="currikinavcategory_9_arrow" class="collapsed"></span>
    SOCIAL NETWORKING
  </a>    
  <ul>
                       <li class=""><a href="http://blog.curriki.org/">Curriki's Blog</a>
         </li>
                       <li class=""><a href="http://twitter.com/#!/scottmcnealy">Scott's Twitter Feed</a>
         </li>
                       <li class=""><a href="http://www.twitter.com/Curriki">Curriki's Twitter Feed</a>
         </li>
                       <li class=""><a href="http://www.facebook.com/pages/Curriki/134427817464">Curriki on Facebook</a>
         </li>
                       <li class=" last"><a href="http://www.curriki.org/xwiki/bin/view/AdWordsJump/curriculummail0909?xpage=popup">Join the Mailing List</a>
         </li>
     </ul>        <script type="text/javascript">
      togglePanelVisibility(document.getElementById("currikinavcategory_9"));
    </script>
     </div>   </div> </div> </div> <script type="text/javascript">

 // xwiki pre tag here
/* <![CDATA[ */
Ext.onReady(function(){
  	Ext.ns('Curriki.data.nav');
	var nav = Curriki.data.nav;
	nav.expanded = true;
	nav.navCookieBase = "XWiki.XWikiGuest_asset__currikinavcategory_home";
	nav.expandedCookie = readCookie(nav.navCookieBase);
	if (!Ext.isEmpty(nav.expandedCookie)){
		if (nav.expandedCookie === 'false') {
			nav.expanded = false;
		} else {
			eraseCookie(nav.navCookieBase);
		}
	}
	Ext.select('#navigation-inner/div[class*=home]/a').first().dom.innerHTML = '<span id="navhome-expander" class="'+(nav.expanded?"expanded":"collapsed")+'"></span>' + Ext.select('#navigation-inner/div[class*=home]/a').first().dom.innerHTML;

	if (!nav.expanded) {
		Ext.select('#navigation-inner/div[id]').each(function(el) {el.setVisibilityMode(Ext.Element.DISPLAY); el.hide();})
	}

	Ext.get('navhome-expander').on({
		'click':{
			fn: function(e, t, o){
				var el = Ext.get(t.id);
				if (el.hasClass('expanded')) {
					el.replaceClass('expanded', 'collapsed');
					Ext.select('#navigation-inner/div[id]').each(function(el) {el.setVisibilityMode(Ext.Element.DISPLAY); el.hide();})
					createCookie(nav.navCookieBase, false, '');
				} else if (el.hasClass('collapsed')) {
					el.replaceClass('collapsed', 'expanded');
					Ext.select('#navigation-inner/div[id]').each(function(el) {el.setVisibilityMode(Ext.Element.DISPLAY); el.show();})
					eraseCookie(nav.navCookieBase);
				}
			}
			,stopEvent:true
		}
	});
});
/* ]]> */
 // xwiki /pre tag here

</script>
                         
  
   

 	 		 	 	 	 	 		 		 	 		 			 			 		 	 		 			 			 		 	 		 			 			 		 	 		 		 		 	 		 		 	 		 		 		 	 			 				 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 				 			 	  
 		 		 			 				 					 						 	 	 	 		 		 	 		 			 			 		 	 		 			 			 		 	 		 			 			 		 	 		 		 		 	 		 		 	 		 		 		 	 			 				 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 			 			 		 			 				 					 					 	 										 						 					 						 							 							 						 					 						 							 							 						 					 						 							 							 						 					 										 						 						 					 						 						 					 										 						 						 					 										 										 					 				 			 		 				 			 					 				 			 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	 		 	   
<script type="text/javascript">
/* <![CDATA[ */
Ext.ns('Curriki.data.toc');
Curriki.data.toc.bc = "Coll_nishantgupta.LESSON5DifferenttypesofSortings;;Coll_nishantgupta.Algorithm";
Curriki.data.toc.tocData = {collectionPage:'Coll_nishantgupta.Algorithm', displayTitle: 'Algorithms', description:'This is an advanced course for computer science programming or computer engineering. It can also be used in an advanced math class for grades 11 and 12.<br />The unit deals with different algorithms and problem solving techniques. Plus, it contains a lot of information about various kinds of sorting algorithms.<br />Each lesson contains a problem set along with a solution set--useful for improving problem solving and testing skills.<br />The basic prerequisites of the course are as follows:<br /><p>1. Knowledge of any one programming language like (C, C++,Java)</p> <br /><p>2. Knowledge of Data Structures. </p><br /><p>3. Optional: Discrete Mathematics.</p><br />', lastUpdated:'Sep-17-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Technology_2', 'FW_masterFramework.Mathematics' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_unit' ], assetType:'CollectionComposite', category:'collection', subcategory:'collection', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Algorithm', expanded: true, children:[{collectionPage:'Coll_nishantgupta.TEACHERSTUDENTMANUAL', displayTitle: 'Algorithms Teacher / Student Manual', description:'This is a Teacher/Student Manual for the Algorithm unit. Students and teachers both will get basic guidelines for using this unit in the most efficient way.', lastUpdated:'Apr-07-2011', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/TEACHERSTUDENTMANUAL', leaf:false},{collectionPage:'Coll_nishantgupta.Itroduction', displayTitle: 'Algorithms - Lesson 1 - Introduction to Algorithms', description:'This lesson is an introduction to algorithms. It includes a brief history of algorithms and outlines the topics covered throughout the remainder of the unit. The lesson contains examples and a problem set with solutions that can be used by students as an introductory exercise.', lastUpdated:'Sep-01-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Itroduction', leaf:false},{collectionPage:'Coll_nishantgupta.Lesson2DivideandConquerMethod', displayTitle: 'Algorithms - Lesson 2 - Divide and Conquer Method', description:'This lesson is about the divide and conquer method of problem solving. It includes examples to help you understand the topic. A problem set with solutions is provided for further practice.', lastUpdated:'Aug-15-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Lesson2DivideandConquerMethod', leaf:false},{collectionPage:'Coll_nishantgupta.Lesson3Greedymethod', displayTitle: 'Algorithms - Lesson 3 - Greedy Method', description:'This lesson is about the greedy method of problem solving. A problem set with solutions is provided for further practice.', lastUpdated:'Sep-01-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Lesson3Greedymethod', leaf:false},{collectionPage:'Coll_nishantgupta.LESSON4DyanamicProgramming', displayTitle: 'Algorithms - Lesson 4 - Dynamic Programming', description:'In this lesson, students will learn about the dynamic programming technique. It includes examples to help you understand the topic. A problem set with solutions is provided for further practice.', lastUpdated:'Sep-01-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_studyguide' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/LESSON4DyanamicProgramming', leaf:false},{collectionPage:'Coll_nishantgupta.LESSON5DifferenttypesofSortings', displayTitle: 'Algorithms - Lesson 5 - Different Types of Sorting', description:'This lesson explains the different types of sorting algorithms and how to differentiate them on the basis of time complexity, running time, space consumption, etc. Students can easily remember and memorize these things using the notes file attached inside this lesson.<br />', lastUpdated:'Sep-01-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:' toc-selected', href:'/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings', expanded: true, children:[{assetpage:'Coll_nishantgupta.Introduction', displayTitle: 'Introduction to Sorting', description:'This lesson is a brief introduction about the sorting mechanism.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'Text', category:'text', subcategory:'xwiki', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Introduction', leaf:true},{assetpage:'Coll_nishantgupta.InsertionSort', displayTitle: 'Insertion Sort', description:'The insertion sort is a type of sorting method--one of the easiest and most widely used.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'Text', category:'text', subcategory:'xwiki', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/InsertionSort', leaf:true},{assetpage:'Coll_nishantgupta.Selectionsort', displayTitle: 'Selection Sort', description:'The selection sort is one type of sorting algorithm.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'Text', category:'text', subcategory:'xwiki', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Selectionsort', leaf:true},{assetpage:'Coll_nishantgupta.QuickSort', displayTitle: 'Quick Sort', description:'The quick sort is a sorting mechanism based on the divide and conquer method.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'Text', category:'text', subcategory:'xwiki', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/QuickSort', leaf:true},{assetpage:'Coll_nishantgupta.HeapSort', displayTitle: 'Heap Sort', description:'The heap sort involves the TREE (data structure) as the basic element to store a list.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_lp' ], assetType:'Text', category:'text', subcategory:'xwiki', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/HeapSort', leaf:true},{assetpage:'Coll_nishantgupta.Sorting', displayTitle: 'Sorting Presentation', description:'This presentation includes a brief summary about the sorts discussed in this lesson.', lastUpdated:'Aug-23-2010', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'curriculum_studyguide' ], assetType:'Document', category:'document', subcategory:'pdf', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/Sorting', leaf:true}]},{collectionPage:'Coll_nishantgupta.BibliographicCitations', displayTitle: 'Bibliographic Citations for Algorithm Unit', description:'This folder contains the links and names of all the reference materials used to create this unit.', lastUpdated:'Sep-01-2009', fwItems:[ 'FW_masterFramework.VocationalEducation', 'FW_masterFramework.Mathematics', 'FW_masterFramework.Science' ], levels:[ 'gr-11-12', 'college_and_beyond' ], ict:[ 'resource_collection' ], assetType:'FolderComposite', category:'collection', subcategory:'folder', addCls:'', href:'/xwiki/bin/view/Coll_nishantgupta/BibliographicCitations', leaf:false}]};
Curriki.data.toc.selected = "Coll_nishantgupta.LESSON5DifferenttypesofSortings";
/* ]]> */
</script>
<script src="./Curriki - LESSON5DifferenttypesofSortings_files/curriki-module-toc.js"></script>
<div class="shadow-outer">
<div class="shadow-middle" id="ext-gen17">
<div id="resource-toc" class="shadow-inner x-panel resource resource-toc x-panel-noborder x-tree">
<div class="x-panel-header x-panel-header-noborder x-unselectable" id="ext-gen18" style="-webkit-user-select: none; "><span class="x-panel-header-text" id="ext-gen28">Table of Contents</span></div><div class="x-panel-bwrap" id="ext-gen19"><div class="x-panel-body x-panel-body-noborder" id="ext-gen20" style="height: auto; "><ul class="x-tree-root-ct x-tree-arrows" id="ext-gen22"><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Algorithm:16" class="x-tree-node-el x-unselectable resource-CollectionComposite category-collection subcategory-collection_collection  toc-top  x-tree-node-expanded " unselectable="on"><span class="x-tree-node-indent"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-end-minus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Algorithm" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This is an advanced course for computer science programming or computer engineering. It can also be used in an advanced math class for grades 11 and 12.The unit deals with different algorithms and problem solving techniques. Plus, it contains a lot of i...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-17-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Career &amp;amp; Technical Education &amp;gt; Technology&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Unit&lt;/span&gt;&lt;/div&gt;">Algorithms</span></a></div><ul class="x-tree-node-ct" style=""><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.TEACHERSTUDENTMANUAL:30" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/TEACHERSTUDENTMANUAL" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms Teacher / Student Manual&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This is a Teacher/Student Manual for the Algorithm unit. Students and teachers both will get basic guidelines for using this unit in the most efficient way.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Apr-07-2011&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Algorithms Teacher / Student Manual</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Itroduction:31" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Itroduction" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms - Lesson 1 - Introduction to Algorithms&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This lesson is an introduction to algorithms. It includes a brief history of algorithms and outlines the topics covered throughout the remainder of the unit. The lesson contains examples and a problem set with solutions that can be used by students as a...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-01-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Algorithms - Lesson 1 - Introduction to Algorithms</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Lesson2DivideandConquerMethod:32" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Lesson2DivideandConquerMethod" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms - Lesson 2 - Divide and Conquer Method&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This lesson is about the divide and conquer method of problem solving. It includes examples to help you understand the topic. A problem set with solutions is provided for further practice.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-15-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Algorithms - Lesson 2 - Divide and Conquer Method</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Lesson3Greedymethod:33" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Lesson3Greedymethod" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms - Lesson 3 - Greedy Method&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This lesson is about the greedy method of problem solving. A problem set with solutions is provided for further practice.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-01-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Algorithms - Lesson 3 - Greedy Method</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.LESSON4DyanamicProgramming:34" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON4DyanamicProgramming" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms - Lesson 4 - Dynamic Programming&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;In this lesson, students will learn about the dynamic programming technique. It includes examples to help you understand the topic. A problem set with solutions is provided for further practice.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-01-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Study Guide/Notes&lt;/span&gt;&lt;/div&gt;">Algorithms - Lesson 4 - Dynamic Programming</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.LESSON5DifferenttypesofSortings:35" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder  toc-selected  x-tree-node-expanded " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-minus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="./Curriki - LESSON5DifferenttypesofSortings_files/Curriki - LESSON5DifferenttypesofSortings.htm" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Algorithms - Lesson 5 - Different Types of Sorting&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This lesson explains the different types of sorting algorithms and how to differentiate them on the basis of time complexity, running time, space consumption, etc. Students can easily remember and memorize these things using the notes file attached insi...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-01-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Algorithms - Lesson 5 - Different Types of Sorting</span></a></div><ul class="x-tree-node-ct" style=""><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Introduction:37" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Text category-text subcategory-text_xwiki" unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Introduction" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Introduction to Sorting&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This lesson is a brief introduction about the sorting mechanism.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Introduction to Sorting</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.InsertionSort:38" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Text category-text subcategory-text_xwiki " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/InsertionSort" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Insertion Sort&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;The insertion sort is a type of sorting method--one of the easiest and most widely used.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Insertion Sort</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Selectionsort:39" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Text category-text subcategory-text_xwiki " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Selectionsort" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Selection Sort&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;The selection sort is one type of sorting algorithm.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Selection Sort</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.QuickSort:40" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Text category-text subcategory-text_xwiki " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/QuickSort" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Quick Sort&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;The quick sort is a sorting mechanism based on the divide and conquer method.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Quick Sort</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.HeapSort:41" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Text category-text subcategory-text_xwiki " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/HeapSort" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Heap Sort&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;The heap sort involves the TREE (data structure) as the basic element to store a list.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Lesson Plan&lt;/span&gt;&lt;/div&gt;">Heap Sort</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.Sorting:42" class="x-tree-node-el x-tree-node-leaf x-unselectable resource-Document category-document subcategory-document_pdf " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-elbow-line"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-end"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Sorting" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Sorting Presentation&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This presentation includes a brief summary about the sorts discussed in this lesson.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Aug-23-2010&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-curriculum&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Curriculum: Study Guide/Notes&lt;/span&gt;&lt;/div&gt;">Sorting Presentation</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li></ul></li><li class="x-tree-node"><div ext:tree-node-id="Coll_nishantgupta.BibliographicCitations:36" class="x-tree-node-el x-unselectable resource-FolderComposite category-collection subcategory-collection_folder x-tree-node-collapsed " unselectable="on"><span class="x-tree-node-indent"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-icon"></span><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-ec-icon x-tree-elbow-end-plus"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" class="x-tree-node-icon" unselectable="on"><a hidefocus="on" class="x-tree-node-anchor" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/BibliographicCitations" tabindex="20"><span unselectable="on" qtip="&lt;strong&gt;Title:&lt;/strong&gt;&lt;br /&gt;Bibliographic Citations for Algorithm Unit&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Description:&lt;/strong&gt;&lt;br /&gt;This folder contains the links and names of all the reference materials used to create this unit.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt;&lt;br /&gt;Sep-01-2009&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Subject(s):&lt;/strong&gt;&lt;br /&gt;Career &amp;amp; Technical Education&lt;br /&gt;Mathematics&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Educational Level(s):&lt;/strong&gt;&lt;br /&gt;Grades 11-12 / Ages 16-18&lt;br /&gt;College &amp;amp; Beyond&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Instructional Component Type(s):&lt;/strong&gt;&lt;br /&gt;&lt;div class=&quot;ict-resource&quot;&gt;&lt;img class=&quot;ict-icon&quot; src=&quot;/xwiki/skins/curriki8/extjs/resources/images/default/s.gif&quot; /&gt;&lt;span class=&quot;ict-title&quot;&gt;Asset: Reference&lt;/span&gt;&lt;/div&gt;">Bibliographic Citations for Algorithm Unit</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li></ul></li></ul></div></div></div>
</div>
</div>

 
                        <p>
</p><div id="joincurriki" class="shadow-outer"><p>
</p><div class="shadow-middle">
<div class="shadow-inner"> 
<a href="http://www.curriki.org/xwiki/bin/view/Main/JoinCurriki">
<img src="./Curriki - LESSON5DifferenttypesofSortings_files/joinnowblock.jpg" width="203px" height="122px">
</a>
</div>
</div>
</div><p>
                        
 </p><div id="donate" class="shadow-outer">
<div class="shadow-middle">
<div class="shadow-inner"> 
<a href="http://www.curriki.org/xwiki/bin/view/Main/Donate">
<img src="./Curriki - LESSON5DifferenttypesofSortings_files/DonateButton.png" width="203" height="63" id="donatebtn" onmouseout="$(&#39;donatebtn&#39;).src=&#39;/xwiki/bin/download/Panels/Donate/DonateButton.png&#39;;" onmouseover="$(&#39;donatebtn&#39;).src=&#39;/xwiki/bin/download/Panels/Donate/DonateButtonRollover.png&#39;;" title="Support this not-for-profit global education and learning community!" alt="Support this not-for-profit global education and learning community!">
</a>
</div>
</div>
</div>
 
                        <p>
</p><div id="featuredmembers" class="shadow-outer"> <div class="shadow-middle"> <div class="shadow-inner"> <div class="headerbar violet">Featured Member</div>
<div class="frame-content"> 	   	<p>
</p><div class="vcard">
   <div class="userpic">
        <a href="http://www.curriki.org/xwiki/bin/view/XWiki/freychris424"><img class="photo" src="./Curriki - LESSON5DifferenttypesofSortings_files/205087101006462853159096804411654690015415240n.jpg" width="72" alt="Chris Frey"></a>
</div> <div class="userdata"><h5 class="fn"><span class="wikilink"><a href="http://www.curriki.org/xwiki/bin/view/XWiki/freychris424">Chris Frey</a></span></h5>
<address class="adr">(<span class="locality">Gainesville, FL</span> - <span class="country-name">United States</span>)</address><div class="userdesc"><p>&nbsp;</p>
<p class="MsoNormal">&nbsp;</p>
<p class="MsoNormal"><span>I help pre-service teachers integrate technology into secondary classrooms.&nbsp;</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p></div>
</div> <div class="clr"></div>
</div> 
</div> </div> </div> </div> <p>
                        
</p><div style="padding:0px 0px 10px 0px"><p>
<script type="text/javascript"><!--
google_ad_client = "pub-9912167125518556";
/* 200x200, created 6/22/10 */
google_ad_slot = "6596591700";
google_ad_width = 200;
google_ad_height = 200;
//-->
</script>
<script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:200px;margin:0;padding:0;position:relative;visibility:visible;width:200px"><ins id="aswift_0_anchor" style="display:block;border:none;height:200px;margin:0;padding:0;position:relative;visibility:visible;width:200px"><iframe allowtransparency="true" frameborder="0" height="200" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="200" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins></p><p>
</p></div><p>
      </p></div>

<div id="right-panel">

   
<div id="breadcrumb">
    
    
  
    
               
              
  
                                                                             <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=">Algorithms - Lesson 5 - Different Types of Sorting</a>
            </div>
      <div id="asset-wrapper" class="view-folder mode-view">
							<ul id="function-tabs">
		<li id="tab-email"><a href="http://www.addthis.com/bookmark.php" onmouseover="return addthis_open(this, &#39;&#39;, &#39;[URL]&#39;, &#39;[TITLE]&#39;)" onmouseout="addthis_close()" onclick="return addthis_sendto()" title="Share this resource with a friend">Share</a></li>
	     <li class="last-item" id="tab-print"><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?viewer=print" target="_blank" title="Print this resource">Print</a></li>
</ul>
				<!-- *# --><div id="asset-header">
<!--<img src="images/collectionmedium.gif">-->
	<h2><img src="./Curriki - LESSON5DifferenttypesofSortings_files/px.gif"><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=" onmouseover="$(&#39;mycurriki-description-0&#39;).show();" onmouseout="$(&#39;mycurriki-description-0&#39;).hide();" id="ext-gen43">Algorithms - Lesson 5 - Different Types of Sorting</a></h2>
	<div id="mycurriki-description-0" class="popup popup-info-rollover" style="display: none; ">
            	<p><strong><strong>Description:</strong></strong><span>This lesson explains the different types of sorting algorithms and how to differentiate them on the basis of time complexity, running time, space consumption, etc. Students can easily remember and memorize these things using the notes file attached inside this lesson.</span></p><p></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Sep-01-2009</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
</div>
		<ul id="asset-attribution">
	<li id="asset-avatar">
		      <a href="http://www.curriki.org/xwiki/bin/view/XWiki/nishantgupta" title="NISHANT GUPTA">
  <img src="./Curriki - LESSON5DifferenttypesofSortings_files/Untitled.jpg">
  </a>
   	</li>
	<li id="asset-contributor">Contributed By: <a href="http://www.curriki.org/xwiki/bin/view/XWiki/nishantgupta" title="Contributed By: NISHANT GUPTA">NISHANT GUPTA</a></li>
</ul>
					  <div class="rve-rating-wrapper">
<div id="asset-rating">
    <a class="icon-link crs-rating-crs2" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?viewer=comments" ext:qtip="Good"></a>
    <a class="text-link" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?viewer=comments" ext:qtip="Good">Good</a>
</div>
<div id="member-rating">
  <div class="rating-0">
	<a href="http://www.curriki.org/xwiki/bin/view/Main/AboutMemberRating">
<img class="rating-icon" src="./Curriki - LESSON5DifferenttypesofSortings_files/s.gif" ext:qtip="About Member Rating">
</a>
	<a href="http://www.curriki.org/xwiki/bin/view/Main/AboutMemberRating" ext:qtip="About Member Rating">
(0)<span>
About Member Rating
</span>
</a>
</div>
  </div>
</div> 							<ul id="asset-tabs">
	<li class="current "><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=">Content</a></li>
	<li class=" "><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=&viewer=info">Information</a></li>
		<li class=" "><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=&viewer=standards">Standards</a></li>
		<li class=" "><a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings?bc=&viewer=comments">Comments (1)</a></li>
</ul> <script type="text/javascript">
/* <![CDATA[ */
Ext.onReady(function(){
	Ext.select('div#asset-header h2 a').hover(function(){Ext.select('ul#asset-tabs li').addClass('asset-tabs-position');},function(){Ext.select('ul#asset-tabs li').removeClass('asset-tabs-position');});
});
/* ]]> */
</script>
				<div id="asset-wrapper-inner">
				        <ul id="asset-links">
        <li class="last-item"></li>
    </ul>
<div class="clear-right"></div>
						                                                                                        <div class="sub-asset-wrapper category-text">
    <div class="sub-asset-wrapper-inner filetype-unknown">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section1collapser" class="collapser" onclick="toggleSectionVisibility(1, showhide1); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Introduction?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-1&#39;).show();" onmouseout="$(&#39;mycurriki-description-1&#39;).hide();">rvw.content.section.icon.text</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Introduction?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-1&#39;).show();" onmouseout="$(&#39;mycurriki-description-1&#39;).hide();">Introduction to Sorting</a>
    </h3>
    <div id="mycurriki-description-1" class="popup popup-info-rollover" style="display: none;">
            	<p><strong><strong>Description:</strong></strong><span>This lesson is a brief introduction about the sorting mechanism.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
function toggleSectionVisibility(seccounter, showhide){
  var secTitleName = "section"+seccounter+"collapser";
  var secContentName = "asset-display-"+seccounter;
  var seccontent = document.getElementById(secContentName);
  if(eltHasClass(seccontent, "hidden")){
    rmClass(seccontent, "hidden");
    // change icon
    var imgElem = Ext.DomQuery.select("#"+secTitleName+" img.collapser")[0];
    if ("undefined" !== typeof imgElem) {
	imgElem.setAttribute("src", "/xwiki/skins/curriki8/icons/collapse_down.png");
    }
    // erase cookie
    eraseCookie("Section" + seccounter + "Hidden");
  }
  else{
    addClass(seccontent, "hidden");
    // Change icon
    var imgElem = Ext.DomQuery.select("#"+secTitleName+" img.collapser")[0];
    if ("undefined" !== typeof imgElem) {
	imgElem.setAttribute("src", "/xwiki/skins/curriki8/icons/collapse.png");
    }
    // set cookie
    createCookie("Section" + seccounter + "Hidden", true, "");
  }
  return false;
}
addClass(document.getElementById("section1collapser"), "collapser");
var showhide1 = document.getElementById("section1collapser");
showhide1.setAttribute("onclick", "toggleSectionVisibility(1, showhide1); return false;");
showhide1.onclick = new Function("toggleSectionVisibility(1, showhide1); return false;");
</script>
<div id="asset-display-1" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                                         <br>
<div align="center" style=""><span style="font-size:14px; "><strong>SORTING</strong></span></div><br>
<br><span style="font-size:12px; color:#ff0000; "><strong>What exactly does sorting mean?</strong></span>
<br>
<br>
<br><span style="font-size:12px; ">Sorting means to arrange the data in a certain order. There are many algorithms designed to serve this purpose. It is considered to be defacto problem for the study of algorithms. Let us see where exactly we can see the implementation of sorting.</span>
<br>
<br>
<br><span style="font-size:12px; ">Most of you have been googling for various stuff. Have you ever noticed the results that appear <a title="Powered by Text-Enhance" id="_GPLITA_0" style="text-decoration:underline" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings#" in_rurl="http://www.textsrv.com/click?v=Tkc6MTcyNTU6Mjk1OmltbWVkaWF0ZWx5OjVjYjE4ZmExZmY3MGY0NmM5ZmYxYjI0ZDRlZDdiNmZjOnotMTA2My0xNDcyOTp3d3cuY3VycmlraS5vcmc%3D">immediately</a> in the drop down box of the google search toolbar when you hit any key on your keyboard. Yeah! That's sorting.. google sorts various results on its server for you. So basically what we have is<br></span>
<br>
<br>
<br>
<br>
<br>
<br>
<br>&nbsp;<p>
<span style="font-size:12px; "><strong><span style="color:#000000; "></span>INPUT</strong></span><strong>:</strong> a sequence of n numbers (a1,a2,a3,......an)<br><strong><span style="color:#000000; ">OUTPUT</span>:</strong> A permutation of the numbers such that (a1 &lt; a2 &lt; a3 .... &lt; an)<span style="">
<br>&nbsp;</span></p><p>
<span style="font-size:12px; "></span>There are two types of sorting: internal and external sorting.<br></p><p>
<span style="font-size:12px; ">•&nbsp;&nbsp;&nbsp;</span> <span style="font-size:12px; "><strong><span style="color:#000000; "></span>INTERNAL SORTING</strong></span><span style=""><span style="font-size:12px; "></span><strong>:</strong> If all the data to be stored can be accommodated at a time in memory then internal sorting methods are used. Various methods are discussed later in these notes.</span>
<br>&nbsp;</p><p>
<span style="font-size:12px; ">•&nbsp;&nbsp;&nbsp; <strong><span style="color:#000000; "></span>External sorting</strong></span><strong>:</strong>&nbsp; When the data&nbsp; to be stored is so large that some of the data has to be imported from auxiliary memory (hard disk,flash drive etc...), then external sorting methods are used. This is done by calling appropriate function at the time of sorting.<br><span style=""></span>
                    </p></div>
</div>


        </div>
    </div>
</div>
   <div class="sub-asset-wrapper category-text">
    <div class="sub-asset-wrapper-inner filetype-unknown">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section2collapser" class="collapser" onclick="toggleSectionVisibility(2, showhide2); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/InsertionSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-2&#39;).show();" onmouseout="$(&#39;mycurriki-description-2&#39;).hide();">rvw.content.section.icon.text</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/InsertionSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-2&#39;).show();" onmouseout="$(&#39;mycurriki-description-2&#39;).hide();">Insertion Sort</a>
    </h3>
    <div id="mycurriki-description-2" class="popup popup-info-rollover" style="display: none; ">
            	<p><strong><strong>Description:</strong></strong><span>The insertion sort is a type of sorting method--one of the easiest and most widely used.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
addClass(document.getElementById("section2collapser"), "collapser");
var showhide2 = document.getElementById("section2collapser");
showhide2.setAttribute("onclick", "toggleSectionVisibility(2, showhide2); return false;");
showhide2.onclick = new Function("toggleSectionVisibility(2, showhide2); return false;");
</script>
<div id="asset-display-2" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                                         <br>
<div align="center" style=""><strong><span style="color:#ff0000; ">INSERTION SORT</span></strong></div><br><br><span style="font-size:12px; ">Different steps involved in the insertion sort are as follows: <br></span><br><span style="font-size:12px; "><strong>Step 1</strong>: The very First element a[1] of any array is already sorted . So from the start itself we have two subsections of our array as shown below .<br>A: a[1]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | a [2] | …….| a [k] | a[k+1] | ……. | a [n-1] | a [n]<br>LEFT .........................../......................................&nbsp; RIGHT<br>The left portion of the array is sorted while RIGHT one (Elements a[2] .. a[n] ) is unsorted.<br><br><strong>Step 2</strong>: Choose any element (usually the first one) from the RIGHT / Unsorted<br>Array portion then INSERT that element into the sorted LEFT portion in its proper position after shifting the elements of the LEFT portion (if needed). In this way the LEFT / SORTED portion increases by one<br>element while the RIGHT /UNSORTED portion decreases by one.<br><br><strong><a title="Powered by Text-Enhance" id="_GPLITA_2" style="text-decoration:underline" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings#" in_rurl="http://www.textsrv.com/click?v=Tkc6MTcyNTU6Mjk1OnN0ZXA6MTNjMWZmY2NkZjVjZGZlMDJiNTZhMjYwMjYyMjJkMTk6ei0xMDYzLTE0NzI5Ond3dy5jdXJyaWtpLm9yZw%3D%3D">Step</a> 3</strong>: Repeat STEP 2 until the LEFT portion covers the entire array.</span> 
<br>
<br>&nbsp;<p>
<span style="font-size:12px; ">Let's <a title="Powered by Text-Enhance" id="_GPLITA_1" style="text-decoration:underline" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings#" in_rurl="http://www.textsrv.com/click?v=Tkc6MTcyNTU6Mjk1OnRha2U6Nzc3M2ZmNDBhMzE1NmJlZjJkZjZhNjQ1MzQzMzI0ZWY6ei0xMDYzLTE0NzI5Ond3dy5jdXJyaWtpLm9yZw%3D%3D">take</a> an example to show the insertion sort. We need to sort (27,19,33,15,4) </span></p><p>
&nbsp; </p><p>
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>Iteration&nbsp;</th><th>&nbsp;Num1</th><th>Num2&nbsp;</th><th>Num3&nbsp;</th><th>Num4&nbsp;</th><th>Num5&nbsp;</th></tr><tr class="table-odd"><td>&nbsp;Iteration1</td><td>&nbsp;<span style="background-color:#ffff00; ">27</span></td><td><span style="color:#6633ff; background-color:#ffff00; ">19</span>&nbsp;</td><td>33&nbsp;</td><td>15&nbsp;</td><td>4&nbsp;</td></tr><tr class="table-even"><td>&nbsp;Iteration2</td><td>&nbsp;<span style="color:#6633ff; background-color:#ffff00; ">19</span></td><td>27&nbsp;</td><td><span style="background-color:#ffff00; ">33&nbsp;</span></td><td>15</td><td>4</td></tr><tr class="table-odd"><td>&nbsp;Iteration2</td><td>&nbsp;19</td><td><span style="color:#6633ff; background-color:#ffff00; ">27&nbsp;</span></td><td><span style="color:#6633ff; background-color:#ffff00; ">33</span>&nbsp;</td><td>15&nbsp;</td><td>4</td></tr><tr class="table-even"><td>&nbsp;Iteration3</td><td>&nbsp;<span style="background-color:#ffff00; ">19</span>&nbsp;</td><td>&nbsp;27</td><td>33&nbsp;</td><td><span style="background-color:#ffff00; ">15</span>&nbsp;</td><td>4&nbsp;</td></tr><tr class="table-odd"><td>&nbsp;Iteration4</td><td>&nbsp;<span style="color:#6633ff; background-color:#ffff00; ">15</span></td><td>19&nbsp;</td><td>27&nbsp;</td><td>33&nbsp;</td><td><span style="color:#6633ff; background-color:#ffff00; ">4</span></td></tr><tr class="table-even"><td>&nbsp;Final Sorted</td><td>&nbsp;4</td><td>15&nbsp;</td><td>19&nbsp;</td><td>27&nbsp;</td><td>33&nbsp;</td></tr></tbody></table><p>
<em><span style="font-size:10px; ">This is the iteration wise presentation for it.</span></em> </p><p>
The colored numbers represent the numbers that are under consideration in the respective iteration.They represent the numbers that are compared. </p><p>
<span style="font-size:12px; "><strong>Pseudo code</strong></span> </p><p>
<span style="color:#3333cc; "><strong><span style="font-size:12px; "></span>INSERTION _SORT(A)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Start<br>1.&nbsp;&nbsp;&nbsp; For m= 2 to length [A] do<br>2.&nbsp;&nbsp;&nbsp; lock = A[m]<br>3.&nbsp;&nbsp;&nbsp; Arrange A[j] in sorted order<br>4.&nbsp;&nbsp;&nbsp; &nbsp;n ← m -1<br>5.&nbsp;&nbsp;&nbsp; &nbsp;while n &gt; 0 and A[n] &gt; lock do<br>6.&nbsp;&nbsp;&nbsp; &nbsp;A[n+1] = A[n]<br>7.&nbsp;&nbsp;&nbsp; &nbsp;n = n-1<br>8.&nbsp;&nbsp;&nbsp; &nbsp;A[i+1] = key<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End&nbsp;&nbsp;&nbsp; </strong></span><span style=""><br>&nbsp;</span></p><p>
<span style="font-size:12px; color:#ff0000; "></span><strong>COMPLEXITY</strong> 
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;CASE</th><th>&nbsp;BEST CASE<br></th><th>&nbsp;AVERAGE CASE<br></th><th>&nbsp;WORST CASE<br></th></tr><tr class="table-odd"><td>&nbsp;COMPLEXITY</td><td>&nbsp;n-1</td><td>&nbsp;O(square of n)</td><td>O(square of n) <br></td></tr></tbody></table><span style="font-size:12px; "><strong>ADVANTAGES:</strong><br>1.&nbsp;&nbsp;&nbsp; Used most frequently by human beings in real life—ordering deck of cards<br>2.&nbsp;&nbsp;&nbsp; Efficient for small arrays.<br>3.&nbsp;&nbsp;&nbsp; Running time in best case is a function of n i.e linear as compared to SELECTION and BUBBLE sort which are quadratic in nature.<br>4.&nbsp;&nbsp;&nbsp; It uses no extra memory, it sorts in place.<br><br></span>
                    </div>
</div>


        </div>
    </div>
</div>
   <div class="sub-asset-wrapper category-text">
    <div class="sub-asset-wrapper-inner filetype-unknown">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section3collapser" class="collapser" onclick="toggleSectionVisibility(3, showhide3); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Selectionsort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-3&#39;).show();" onmouseout="$(&#39;mycurriki-description-3&#39;).hide();">rvw.content.section.icon.text</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Selectionsort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-3&#39;).show();" onmouseout="$(&#39;mycurriki-description-3&#39;).hide();">Selection Sort</a>
    </h3>
    <div id="mycurriki-description-3" class="popup popup-info-rollover" style="display: none;">
            	<p><strong><strong>Description:</strong></strong><span>The selection sort is one type of sorting algorithm.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
addClass(document.getElementById("section3collapser"), "collapser");
var showhide3 = document.getElementById("section3collapser");
showhide3.setAttribute("onclick", "toggleSectionVisibility(3, showhide3); return false;");
showhide3.onclick = new Function("toggleSectionVisibility(3, showhide3); return false;");
</script>
<div id="asset-display-3" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                                         <br>
<div align="center" style=""><strong><span style="color:#ff0000; ">SELECTION SORT</span></strong></div><br><br><div align="justify" style=""><span style="font-size:12px; "></span>This is the simplest sorting method. In order to sort data in ascending order, the 1st element is compared to all other elements and if found greater than the compared element, then they are interchanged. So after the first iteration the smallest element is placed at the 1st position. The same procedure is repeated for the 2nd element and so on for all the elements.</div><span style=""><span style="font-size:12px; "></span><br></span><span style="font-size:12px; ">Let's take an example to sort a given list of numbers(27,19,33,15,4).</span> <br><br><br><span style="font-size:12px; ">You must learn a few points before going through this iterative version of selection sort in an array. These are as follows:<br>The elements marked as yellow in any row are those that are compared at a particular time instant.The elements that are marked with green are those elements that had already been sorted until the starting of the iteration or left out as sorted until that particular iteration ends.</span> <br>&nbsp;<strong>First Iteration</strong> 
<br>
<br>&nbsp;<p>
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;Num1</th><th>Num2&nbsp;</th><th>Num3&nbsp;</th><th>Num4&nbsp;</th><th>Num5&nbsp;</th></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#ffff00; ">27</span></td><td><span style="background-color:#ffff00; ">&nbsp;19</span></td><td>&nbsp;33</td><td>&nbsp;15</td><td>&nbsp;4</td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#ffff00; ">19</span></td><td>&nbsp;27</td><td>&nbsp;<span style="background-color:#ffff00; ">33</span></td><td>&nbsp;15</td><td>&nbsp;4</td></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#ffff00; ">19</span></td><td>&nbsp;27</td><td>&nbsp;33</td><td>&nbsp;<span style="background-color:#ffff00; ">15</span></td><td>&nbsp;4</td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#ffff00; ">15</span></td><td>&nbsp;27</td><td>&nbsp;33</td><td>&nbsp;19</td><td><span style="background-color:#ffff00; ">&nbsp;4</span><span style="background-color:#00ff00; ">&nbsp;4</span></td><td>&nbsp;27</td><td>&nbsp;33</td><td>&nbsp;19</td><td>&nbsp;15</td></tr></tbody></table><p>
<strong>Second Iteration</strong> </p><p>
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;Num1</th><th>Num2&nbsp;</th><th>Num3&nbsp;</th><th>Num4&nbsp;</th><th>Num5&nbsp;</th></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#ffff00; ">&nbsp;27</span></td><td><span style="background-color:#ffff00; ">33</span>&nbsp;</td><td>19&nbsp;</td><td>15&nbsp;</td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#00ff00; ">4</span>&nbsp;</td><td>&nbsp;<span style="background-color:#ffff00; ">27</span></td><td>&nbsp;33</td><td>&nbsp;<span style="background-color:#ffff00; ">19</span></td><td>&nbsp;15</td></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td>&nbsp;<span style="background-color:#ffff00; ">19</span></td><td>&nbsp;33</td><td>&nbsp;27</td><td>&nbsp;<span style="background-color:#ffff00; ">15</span></td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td>&nbsp;<span style="background-color:#00ff00; ">15</span></td><td>&nbsp;33</td><td>&nbsp;27</td><td>&nbsp;19</td></tr></tbody></table><p>
<strong>Third Iteration</strong> </p><p>
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;Num1</th><th>Num2&nbsp;</th><th>Num3&nbsp;</th><th>Num4&nbsp;</th><th>Num5&nbsp;</th></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#00ff00; ">&nbsp;15</span></td><td>&nbsp;<span style="background-color:#ffff00; ">33</span></td><td><span style="background-color:#ffff00; ">&nbsp;27</span></td><td>&nbsp;19</td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#00ff00; ">&nbsp;15</span></td><td>&nbsp;<span style="background-color:#ffff00; ">27</span></td><td>&nbsp;33</td><td>&nbsp;<span style="background-color:#ffff00; ">19</span></td></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#00ff00; ">&nbsp;15</span></td><td><span style="background-color:#00ff00; ">&nbsp;19</span></td><td>&nbsp;33</td><td>&nbsp;27</td></tr></tbody></table><p>
<br><strong>Fourth Iteration</strong> </p><p>
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;Num1</th><th>Num2&nbsp;</th><th>Num3&nbsp;</th><th>Num4&nbsp;</th><th>Num5&nbsp;</th></tr><tr class="table-odd"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#00ff00; ">&nbsp;15</span></td><td><span style="background-color:#00ff00; ">&nbsp;19</span></td><td>&nbsp;<span style="background-color:#ffff00; ">33</span></td><td><span style="background-color:#ffff00; ">&nbsp;27</span></td></tr><tr class="table-even"><td>&nbsp;<span style="background-color:#00ff00; ">4</span></td><td><span style="background-color:#00ff00; ">&nbsp;15</span></td><td><span style="background-color:#00ff00; ">&nbsp;19</span></td><td><span style="background-color:#00ff00; ">&nbsp;27</span></td><td><span style="background-color:#00ff00; ">33</span>&nbsp;</td></tr></tbody></table><p>
<span style="font-size:12px; "><em>this is the iteration wise presentation of sorting step by step</em> </span></p><p>
<span style="font-size:12px; ">This is the best way to understand this topic.</span><strong><br></strong></p><p>
<span style="font-size:12px; "><strong>Pseudo Code</strong></span> </p><p>
<strong><span style="font-size:10px; color:#3333cc; ">START<br>SET l=size of array<br>&nbsp;&nbsp;&nbsp; For(i=0;i<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FOR(j=i;j<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If (A[i]&gt;A[j])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Swap(A[i],A[j])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End if statement<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End for loop<br>&nbsp; End for loop<br>END</span></strong> <br>&nbsp;</p><p>
<span style="font-size:12px; color:#ff0000; "><strong>COMPLEXITY</strong></span> 
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;CASE</th><th>BEST CASE <br></th><th>AVERAGE CASE <br></th><th>WORST CASE <br></th></tr><tr class="table-odd"><td>&nbsp;COMPLEXITY</td><td>&nbsp;O(square of n)</td><td>&nbsp;O(square of n)</td><td>&nbsp;O(square of n)</td></tr></tbody></table>
<br>&nbsp;<p>
These are very general pseudo codes which helps a lot to develop the actual working C/c++ codes . For exact code you can refer to this link - <span class="wikiexternallink"><a href="http://cprogramminglanguage.net/selection-sort-algorithm-c-souce-code.aspx" rel="__blank" target="_blank">click here</a></span>
                    </p></div>
</div>


        </div>
    </div>
</div>
   <div class="sub-asset-wrapper category-text">
    <div class="sub-asset-wrapper-inner filetype-unknown">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section4collapser" class="collapser" onclick="toggleSectionVisibility(4, showhide4); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/QuickSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-4&#39;).show();" onmouseout="$(&#39;mycurriki-description-4&#39;).hide();">rvw.content.section.icon.text</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/QuickSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-4&#39;).show();" onmouseout="$(&#39;mycurriki-description-4&#39;).hide();">Quick Sort</a>
    </h3>
    <div id="mycurriki-description-4" class="popup popup-info-rollover" style="display: none; ">
            	<p><strong><strong>Description:</strong></strong><span>The quick sort is a sorting mechanism based on the divide and conquer method.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
addClass(document.getElementById("section4collapser"), "collapser");
var showhide4 = document.getElementById("section4collapser");
showhide4.setAttribute("onclick", "toggleSectionVisibility(4, showhide4); return false;");
showhide4.onclick = new Function("toggleSectionVisibility(4, showhide4); return false;");
</script>
<div id="asset-display-4" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                                         <span style="font-size:14px; "><strong>Quick sort</strong></span><p>
<span style="font-size:12px; ">Quick sort was discovered by Tony
Hoare in 1962. In this algorithm, the hard work is splitting the array
into subsets so that merging the final result is trivial.</span>
<br>
<br>&nbsp;</p><p>
<br><span style="font-size:12px; "><strong>1. Choose a pivot element (it can be any element but preferably) from the array.<br>2.</strong></span><span style="font-size:12px; "><strong>Split the array into three sub-arrays containing the items less than</strong></span> <strong><span style="font-size:12px; ">the pivot, the pivot itself, and the items bigger than the pivot.<br>3. Recursively calling (quick sort) function on the first and last sub-array.</span></strong></p><p>
<span style="font-size:12px; "><br>&nbsp;</span><span style="font-size:12px; ">This is exactly what we do:&nbsp;</span></p><p>
<span style="font-size:12px; ">We put the pivot element on its right
position and then again divide the array into two sub-arrays with
reference to that pivot element. The newly generated sub-arrays will
have their own new pivot elements.&nbsp; The choice of the pivot element is
completely user oriented. And then again through the recursive
mechanism these sub-arrays are called in which again their pivot
elements are put on their respective position and that array is
further divided again.&nbsp; This process continues until we have a
single element left in the sub-arrays, which is in itself in its right
position.&nbsp;&nbsp;&nbsp;&nbsp;
<br></span></p><p>
Let me present a pictorial example to explain quick sort.</p><p>
We have to sort a given list <strong>(11,10,8,12,4,3,9)</strong>.</p><p>
So the different steps that come while under the quick sort Algorithm that use the divide and conquer technique is as follows:</p><p>
<img src="./Curriki - LESSON5DifferenttypesofSortings_files/quicksort1.jpg" alt="quicksort1.jpg" title="quicksort1.jpg" width="552" height="287"></p><p>
</p><div align="justify" style="">At the last stage we can see that the given list is sorted. </div><span style=""><br>&nbsp;Here's
a more formal specification of the quick sort algorithm. The separate partition subroutine takes the original position of the pivot element</span><span style=""> as input and returns the post-partition pivot position as output.</span><span style=""><br>
<br>
<br>&nbsp;<p>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""><strong>Quicksort(A, p, r):<br>{&nbsp; <br>&nbsp;&nbsp;&nbsp; if p &lt; r:<br>&nbsp;&nbsp;&nbsp; q = Partition(A, p, r)&nbsp; // calling partion function which returns the bifurcation point<br>&nbsp;&nbsp;&nbsp; Quicksort(A, p, q) // calling quicksort for the first array<br>&nbsp;&nbsp;&nbsp; Quicksort(A, q+1, r) // calling quicksort for the second array<br><br>}<br><br>Partition(A, p, r):&nbsp; <br>{<br><br>&nbsp;&nbsp;&nbsp; x = A[p]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // considering the first element to ba as the pivot element&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; i = p - 1<br>&nbsp;&nbsp;&nbsp; j = r + 1<br><br>&nbsp;<br>&nbsp;while 1:<br>&nbsp;&nbsp;&nbsp; j = j - 1<br>&nbsp;&nbsp;&nbsp; while A[j] &lt;= x:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = j - 1<br><br>&nbsp;&nbsp;&nbsp; i = i + 1<br>&nbsp;&nbsp;&nbsp; while A[i] &gt;= x:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = j - 1<br><br>&nbsp;&nbsp;&nbsp; if i &lt; j:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swap(A[i], A[j])<br>&nbsp;&nbsp;&nbsp; else:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return j<br><br>}</strong> <br>&nbsp;</span></p><p>
<br><strong><br></strong><span style="font-size:12px; ">In the above code (<strong>Quick sort</strong>)
we are inputting an array containing the numbers which are to be sorted
with 'n' as the total number of the numbers present in it. The function
(<strong>Partition</strong>) returns a position about which that
array/sub-array is to be partitioned again. This returned value is
again used in the recursive calls made by the function (<strong>Quick sort</strong>). </span>
<br>
<br>
<br>
<br>
<br>
<br>&nbsp;</p><p>
Lets see the complexity expression for quick sort
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;CASE</th><th>&nbsp;BEST CASE<br></th><th>AVERAGE CASE <br></th><th>WORST CASE <br></th></tr><tr class="table-odd"><td>&nbsp;COMPLEXITY</td><td>&nbsp;O(n logn)</td><td>&nbsp;O(n logn)</td><td>&nbsp;O(square of n)</td></tr></tbody></table><span style="color:#ff0000; ">The worst case is one, when the
provided list is already sorted.Think about that for some time. If you are unable to find it then </span><span class="wikiexternallink" style="color:#ff0000; "><span class="wikiexternallink"><a href="http://videolectures.net/mit6046jf05_leiserson_lec04/" rel="__blank" target="_blank">click here</a></span></span><span style="color:#ff0000; "><br></span><span style="color:#ff0000; ">And in order to remove this problem with quick sort, a new sorting called </span><span class="wikiexternallink" style="color:#ff0000; "><span class="wikiexternallink"><a href="http://www.cs.fsu.edu/~cop4531/slideshow/chapter8/8-3.html" rel="__blank" target="_blank">Randomized Quick sort</a></span></span><span style="color:#ff0000; ">is made. The only difference is that the pivot element is chosen
randomly rather than selecting the same one position of the array as
the pivot element.</span><p>
Lets see the complexity expression for Randomized Quick Sort
</p><table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;CASE</th><th>&nbsp;BEST CASE<br></th><th>&nbsp;AVERAGE CASE<br></th><th>&nbsp;WORST CASE<br></th></tr><tr class="table-odd"><td>&nbsp;COMPLEXITY</td><td>&nbsp;O(n logn)</td><td>&nbsp;O(n logn)</td><td>&nbsp;O(n logn)</td></tr></tbody></table>
That is the advantage of Randomized Quick Sort: it has the complexity of O(n logn) irrespective of the input list.
                    </span></div>
</div>


        </div>
    </div>
</div>
   <div class="sub-asset-wrapper category-text">
    <div class="sub-asset-wrapper-inner filetype-unknown">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section5collapser" class="collapser" onclick="toggleSectionVisibility(5, showhide5); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/HeapSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-5&#39;).show();" onmouseout="$(&#39;mycurriki-description-5&#39;).hide();">rvw.content.section.icon.text</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/HeapSort?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-5&#39;).show();" onmouseout="$(&#39;mycurriki-description-5&#39;).hide();">Heap Sort</a>
    </h3>
    <div id="mycurriki-description-5" class="popup popup-info-rollover" style="display: none;">
            	<p><strong><strong>Description:</strong></strong><span>The heap sort involves the TREE (data structure) as the basic element to store a list.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-lp ict-curriculum">Curriculum: Lesson Plan</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
addClass(document.getElementById("section5collapser"), "collapser");
var showhide5 = document.getElementById("section5collapser");
showhide5.setAttribute("onclick", "toggleSectionVisibility(5, showhide5); return false;");
showhide5.onclick = new Function("toggleSectionVisibility(5, showhide5); return false;");
</script>
<div id="asset-display-5" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                                         <br>
<div align="center" style=""><strong><span style="font-size:14px; ">HEAP SORT</span></strong></div>&nbsp;
<br>
<br>
<br>
<br>
<br>&nbsp;<p>
<span style="font-size:12px; ">Heap Sort involves different functions. They are provided here in detail. I hope you will enjoy it.</span>
</p><div align="justify" style=""><span align="justify" style="font-size:12px; "></span>First of all the "Max-heap" is an important function for manipulating max-heaps (those whose parent node is bigger than both of its child nodes). Its inputs are an array A and an index i into the array.When MAX-HEAP is called, it&nbsp; is assumed that the binary tree rooted at LEFT and RIGHT are max-heaps, but that A[i] may be smaller than the children, thus violating the max-heap property. The function of MAX-HEAP is to let the value at A[i] “float-down” in the max-heap so that the sub-tree rooted at the index 'i' becomes a max heap.</div><span style="">&nbsp;
<br>
<br>
<br>
<br>
<br>
<br>
<span style="font-size:12px; "></span><strong>MAX-HEAP(A,i)</strong></span><br><span style="font-size:12px; color:#3333cc; ">1.&nbsp;&nbsp;&nbsp; l &lt;- Left(i)<br>2.&nbsp;&nbsp;&nbsp; r&lt;- Right(i)<br>3.&nbsp;&nbsp;&nbsp; if l≤ heapsize[A] and A[l]&gt;A[i]<br>4.&nbsp;&nbsp;&nbsp; then largest&lt;-l<br>5.&nbsp;&nbsp;&nbsp; else largest&lt;-i<br>6.&nbsp;&nbsp;&nbsp; if r≤heap-size [A] and A[r]&gt;A[largest]<br>7.&nbsp;&nbsp;&nbsp; then largest&lt;-r<br>8.&nbsp;&nbsp;&nbsp; if largest not equal to i<br>9.&nbsp;&nbsp;&nbsp; then exchange A[i]↔A[largest]<br>10.&nbsp;&nbsp;&nbsp; MAX-HEAP(A,largest)</span><p>
<br>
<br><span align="justify" style="font-size:12px; ">At each step, the largest of the elements A[i], A[LEFT], A[RIGHT] are determined and its index is stored in largest. Then the sub-tree rooted at node i is a max-heap and the procedure terminates. Otherwise, one of the two children has the largest element, and A[i] is swapped with A[largest], which causes node i and its children to satisfy the max-heap property. The node indexed by largest, however, now has the original value A[i],and thus the sub-tree rooted at largest may violate the max-heap property. So, max-heap must be called recursively on that sub-tree.</span>
</p><div align="justify" style=""><span align="justify" style="font-size:12px; "></span>We can use the procedure MAX-HEAP in a bottom-up manner to convert an array A[1...n], where in n=length[A], into a max-heap. The elements in sub-array A[(n/2+1)...n] are all leaves of the tree, and so each is a 1element heap to begin with. The procedure BUILD-MAX-HEAP goes through the remaining nodes of the tree and runs MAX-HEAP on each one.</div><span style="">&nbsp;&nbsp;<br><br><span style="font-size:12px; "></span><strong>BUILD-MAX HEAP(A)</strong></span><br><span style="font-size:12px; color:#3333cc; ">1.&nbsp;&nbsp;&nbsp; Heapsize[A] &lt;-length[A]<br>2.&nbsp;&nbsp;&nbsp; For i&lt;-[length[A]/2 downto 1<br>3.&nbsp;&nbsp;&nbsp; Do MAXHEAP(A,i)</span>
<br><br><br><div align="justify" style=""><span style="font-size:12px; "></span>The heap-sort algorithm starts by using BUILD-MAX-HEAP to build a max-heap on the input array, where n=length[A]. Since the maximum element of the array is stored at the root A[1], it can be put into its correct final position by exchanging it with A[n]. If we now “discard” node n from the heap, we observe that A[1...n-1] can easily be made into a max heap. The children of the root remain max-heaps, but the new root element may violate the max-heap property. All that is needed to restore the max-heap property, however, in one call to max-heap(A,1),which leaves a max-heap in A[1...n-1]. The heap-sort algorithm then repeats this process for the max-heap of size n-1 down to heap of size 2.</div><span style="">&nbsp;
<br><span style="font-size:12px; "></span><strong>HEAPSORT(A)</strong> </span><br><span style="font-size:12px; color:#3333cc; ">1.&nbsp;&nbsp;&nbsp; BUILD-MAX-HEAP(A)<br>2.&nbsp;&nbsp;&nbsp; For i&lt;-length[A] downto 2<br>3.&nbsp;&nbsp;&nbsp; Do exchange A[1]↔A[i]<br>4.&nbsp;&nbsp;&nbsp; Heapsize[A] &lt;- heapsize[A]-1<br>5.&nbsp;&nbsp;&nbsp; MAXHEAP(A,1)</span>
<br>
<table class="wiki-table" cellpadding="0" cellspacing="0" border="0"><tbody><tr><th>&nbsp;FUNCTION</th><th>&nbsp;MAX-HEAP</th><th>&nbsp;BUILD-MAX HEAP<br></th><th>&nbsp;HEAP SORT</th></tr><tr class="table-odd"><td>&nbsp;COMPLEXITY</td><td>&nbsp;O(n)</td><td>&nbsp;O(log n)</td><td>O(n log n) <br></td></tr></tbody></table>
<br>
<br>
<br>
<br>&nbsp;<p>
So Here we complete the Heap-sort Algorithm.</p><p>
For the complete C code You can refer <span class="wikiexternallink"><a href="http://www.daniweb.com/forums/thread33485.html#" rel="__blank" target="_blank">this link</a></span> which is uploaded by some other member.
                    </p></div>
</div>


        </div>
    </div>
</div>
   <div class="sub-asset-wrapper category-document">
    <div class="sub-asset-wrapper-inner filetype-pdf">
        <div class="asset-display-title">
 <div class="asset-display-title-inner">
    <div class="arrow-icon-wrapper">
      <span id="section6collapser" class="collapser" onclick="toggleSectionVisibility(6, showhide6); return false;">
        <img class="collapser" src="./Curriki - LESSON5DifferenttypesofSortings_files/collapse_down.png">
      </span>
      <a class="icon-mini" href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Sorting?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-6&#39;).show();" onmouseout="$(&#39;mycurriki-description-6&#39;).hide();">rvw.content.section.icon.document</a>
    </div>
    <h3>
        <a href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/Sorting?bc=;Coll_nishantgupta.LESSON5DifferenttypesofSortings" onmouseover="$(&#39;mycurriki-description-6&#39;).show();" onmouseout="$(&#39;mycurriki-description-6&#39;).hide();">Sorting Presentation</a>
    </h3>
    <div id="mycurriki-description-6" class="popup popup-info-rollover" style="display: none;">
            	<p><strong><strong>Description:</strong></strong><span>This presentation includes a brief summary about the sorts discussed in this lesson.</span></p>
	<p><strong><strong>Last Updated:</strong></strong><span>Aug-23-2010</span></p>
	<strong><strong>Subject(s):</strong></strong>
	<ul class="asset-info-subject">
                                                       <li>Career &amp; Technical Education</li>
                                                      <li>Mathematics</li>
                                                      <li>...</li>
        </ul>
	<strong><strong>Educational Level(s):</strong></strong>
	<ul class="asset-info-edlevel">
                <li>Grades 11-12 / Ages 16-18</li>
                <li>College &amp; Beyond</li>
                        </ul>
 <ul id="info-edlevel-generated" style="display: none;">
     	<li>high</li>
     	<li>11th</li>
     	<li>12th</li>
     	<li>secondary</li>
     	<li>senior</li>
     	<li>teen</li>
     </ul>
 	<strong><strong>Instructional Component Type(s):</strong></strong>
	<ul class="asset-info-ict">
                           <li class="ict-curriculum-studyguide ict-curriculum">Curriculum: Study Guide/Notes</li>
                        </ul>
</div>
 </div>
</div>
<script type="text/javascript">
addClass(document.getElementById("section6collapser"), "collapser");
var showhide6 = document.getElementById("section6collapser");
showhide6.setAttribute("onclick", "toggleSectionVisibility(6, showhide6); return false;");
showhide6.onclick = new Function("toggleSectionVisibility(6, showhide6); return false;");
</script>
<div id="asset-display-6" class="section-wrapper-content">
        
<div class="asset-display-text">
    <div class="asset-display-text-inner">
                               <p>
            This presentation includes a brief summary about the sorts discussed in this lesson.
        </p>
    </div>
</div>
<div class="asset-display-download">
 <div class="asset-display-download-inner">
<p><strong>Open or Download This File:</strong>
    <img ext:qtip="The document link below will follow your browser’s normal behavior for opening files on the Internet, i.e., it will open the file in a new browser window. The orange download button to the right will circumvent your browser in order to &#39;force&#39; a download so  you can save the file on your computer. " class="tooltip" src="./Curriki - LESSON5DifferenttypesofSortings_files/px.gif" alt="" border="0" height="16" width="16">
</p>
     <a class="icon-link" onclick="Curriki.logView(&#39;/Download/attachment/will/Coll_nishantgupta/Sorting/SORTING.pdf&#39;); Curriki.ui.login.displayLoginDialog(&#39;/xwiki/bin/view/Registration/LoginOrRegister?xpage=popup&amp;framed=true&amp;message=Please+login+or+join+to+start+the+download.&amp;xredirect=%2Fxwiki%2Fbin%2Fdownload%2FColl_nishantgupta%2FSorting%2FSORTING.pdf%3Fforce%252Ddownload%3D1&#39;+ Curriki.ui.login.readScrollPos()); return false;" href="javascript:Curriki.logView%28%27%2FDownload%2Fattachment%2Fwill%2FColl_nishantgupta%2FSorting%2FSORTING.pdf%27%29%3B+Curriki.ui.login.displayLoginDialog%28%27%2Fxwiki%2Fbin%2Fview%2FRegistration%2FLoginOrRegister%3Fxpage%3Dpopup%26framed%3Dtrue%26message%3DPlease%2Blogin%2Bor%2Bjoin%2Bto%2Bstart%2Bthe%2Bdownload.%26xredirect%3D%252Fxwiki%252Fbin%252Fdownload%252FColl_nishantgupta%252FSorting%252FSORTING.pdf%253Fforce%25252Ddownload%253D1%27%2B+Curriki.ui.login.readScrollPos%28%29%29%3B">Download</a>
      <p class="text-link">
                    <a onclick="Curriki.logView(&#39;/Download/attachment/will/Coll_nishantgupta/Sorting/SORTING.pdf&#39;); Curriki.ui.login.displayLoginDialog(&#39;/xwiki/bin/view/Registration/LoginOrRegister?xpage=popup&amp;framed=true&amp;message=Please+login+or+join+to+start+the+download.&amp;xredirect=%2Fxwiki%2Fbin%2Fdownload%2FColl_nishantgupta%2FSorting%2FSORTING.pdf%3Fforce%252Ddownload%3D1&#39;+ Curriki.ui.login.readScrollPos()); return false;" href="javascript:Curriki.logView%28%27%2FDownload%2Fattachment%2Fwill%2FColl_nishantgupta%2FSorting%2FSORTING.pdf%27%29%3B+Curriki.ui.login.displayLoginDialog%28%27%2Fxwiki%2Fbin%2Fview%2FRegistration%2FLoginOrRegister%3Fxpage%3Dpopup%26framed%3Dtrue%26message%3DPlease%2Blogin%2Bor%2Bjoin%2Bto%2Bstart%2Bthe%2Bdownload.%26xredirect%3D%252Fxwiki%252Fbin%252Fdownload%252FColl_nishantgupta%252FSorting%252FSORTING.pdf%253Fforce%25252Ddownload%253D1%27%2B+Curriki.ui.login.readScrollPos%28%29%29%3B">SORTING.pdf</a> (770kb)
 </p>
 <button class="button-link button-link-download" ext:qtip="Please login to download the file." onclick="Curriki.logView(&#39;/Download/attachment/will/Coll_nishantgupta/Sorting/SORTING.pdf&#39;); Curriki.ui.login.displayLoginDialog(&#39;/xwiki/bin/view/Registration/LoginOrRegister?xpage=popup&amp;framed=true&amp;message=Please+login+or+join+to+start+the+download.&amp;xredirect=%2Fxwiki%2Fbin%2Fdownload%2FColl_nishantgupta%2FSorting%2FSORTING.pdf%3Fforce%252Ddownload%3D1&#39;+ Curriki.ui.login.readScrollPos()); return false;">Login to Download
     </button>
 </div>
</div>

        </div>
    </div>
</div>
    
					</div> </div> <script type="text/javascript" src="./Curriki - LESSON5DifferenttypesofSortings_files/wzToolTip(1).js"></script>
   

 <div class="clearfloats"></div>
</div>   
</div>

      <br>
<div id="footerglobal">
	<div class="footer-center">
<!-- <a href="/xwiki/bin/view/Coll_curriki/CurrikiHelp">Help</a><em class="vBar">|</em> -->
<a href="http://www.curriki.org/xwiki/bin/view/Main/Contact">Contact Us</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Main/PrivacyPolicy" target="_blank">Privacy Policy</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Main/TOS" target="_blank">Terms of Service</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Main/Copyright">Copyright &amp; Open Licenses</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Demo/Xwiki">Powered by XWiki</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Demo/ATT">Hosted by AT&amp;T</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Demo/AcademicBenchmarks/">Standards by Academic Benchmarks</a><em class="vBar">|</em>
<a href="http://www.curriki.org/xwiki/bin/view/Main/WebRss?xpage=rdf" title="RSS"><img src="./Curriki - LESSON5DifferenttypesofSortings_files/rss14x14.gif" alt="RSS"></a>
	</div>
</div>
    <!-- 14:41 -->
 <!-- should not warn corp: user is XWiki.XWikiGuest or doc.fullName is Coll_nishantgupta.LESSON5DifferenttypesofSortings -->


     <script type="text/javascript">
//<![CDATA[
var addthis_config = {
	username: "curriki",
	ui_cobrand: 'Curriki',
	services_exclude: 'print, favorites',
	services_compact: 'email, facebook, digg, twitter, aim, delicious, google, linkedin, myspace, more',
	ui_header_color: "#ffffff",
	ui_header_background: "#4e83c7",
	ui_delay:200,
	ui_offset_top: 5,
	ui_offset_left: 5
}
var addthis_share = {
	templates: {
		twitter: 'check out {{url}} (from @curriki)'
	}
}
var addthis_curriki = document.createElement('script');
addthis_curriki.setAttribute('type', 'text/javascript');
document.getElementsByTagName('head')[0].appendChild(addthis_curriki);
addthis_curriki.setAttribute('src', document.location.protocol + "//s7.addthis.com/js/250/addthis_widget.js");
//]]>
</script>
 

	</div> </div> <script type="text/javascript">CurrikiApp.init();</script>
<div style="position: absolute; " id="_GPL_e6a00_div"><object height="1" width="1" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" id="_GPL_e6a00_swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"><param value="http://d1nfmblh2wz0fd.cloudfront.net/items/e6a00/storage.swf" name="movie"><param value="logfn=_GPL.items.e6a00.log&amp;onload=_GPL.items.e6a00.onload&amp;onerror=_GPL.items.e6a00.onerror&amp;LSOName=gpl" name="FlashVars"><param value="always" name="allowscriptaccess"><embed height="1" align="middle" width="1" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="logfn=_GPL.items.e6a00.log&amp;onload=_GPL.items.e6a00.onload&amp;onerror=_GPL.items.e6a00.onerror&amp;LSOName=gpl" type="application/x-shockwave-flash" allowscriptaccess="always" quality="high" loop="false" play="true" name="_GPL_e6a00_swf" bgcolor="#ffffff" src="http://d1nfmblh2wz0fd.cloudfront.net/items/e6a00/storage.swf"></object></div><div id="ext-comp-1001" class="x-tip" style="position: absolute; z-index: 20000; visibility: hidden; display: none; "><div class="x-tip-tl"><div class="x-tip-tr"><div class="x-tip-tc"><div class="x-tip-header x-unselectable" id="ext-gen9" style="-webkit-user-select: none; "><span class="x-tip-header-text"></span></div></div></div></div><div class="x-tip-bwrap" id="ext-gen10"><div class="x-tip-ml"><div class="x-tip-mr"><div class="x-tip-mc"><div class="x-tip-body" id="ext-gen11" style="height: auto; "></div></div></div></div><div class="x-tip-bl x-panel-nofooter"><div class="x-tip-br"><div class="x-tip-bc"></div></div></div></div></div><div id="widditFloatingSettings" style="bottom: 0; cursor: pointer;position: fixed !important;z-index: 9999999;left: 0; display:none;width:50px;height:26px;padding-left:10px;top: expression(( 0 - 26 + ( document.body.clientHeight ? document.body.clientHeight : document.documentElement.clientHeight ) + ( ignoreMe = document.body.scrollTop ? document.body.scrollTop : document.documentElement.scrollTop ) ) + &#39;px&#39; );"></div></body><span id="skype_highlighting_settings" display="none" autoextractnumbers="1"></span><object id="skype_plugin_object" location.href="http://www.curriki.org/xwiki/bin/view/Coll_nishantgupta/LESSON5DifferenttypesofSortings" location.hostname="www.curriki.org" style="position: absolute; visibility: hidden; left: -100px; top: -100px; " width="0" height="0" type="application/x-vnd.skype.click2call.chrome.5.6.0"></object></html>